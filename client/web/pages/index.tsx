import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { Button, ButtonText, Input, InputField } from "@gluestack-ui/themed";
import ClientSDK from "@project/client-sdk";
import { useState } from "react";

const Meta = () => {
  return (
    <Head>
      <title>Create Gluestack App</title>
      <meta name="description" content="Generated by node glue add web" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
  );
};



const Example = () => {
  const [image, setImage] = useState(null);
  const [createObjectURL, setCreateObjectURL] = useState(null);

  async function db() {

    const response = await ClientSDK.dbclient?.user.create({
      data: {
        title: "Vidhi Kataria",
        votes: 10,
        status: false,
      },
    })
    console.log(response);
  }


  const [file, setFile] = useState(null);
  const [name, setName] = useState("");
  const [githubId, setGithubId] = useState("");



  const handleFileChange = (event: any) => {
    const selectedFile = event.target.files[0];
    setFile(selectedFile);
  };


  const handleUpload = async () => {
    console.log(name, githubId)
  };


  return (
    <div className={styles.container}>
      <div className={styles.gradient}>
        <Image src="/gradient.svg" alt="Gradient" fill priority />
      </div>
      <main className={styles.main}>
        <p className={styles.badge}>
          Get started by editing <code>pages/index.tsx</code>
        </p>
        <input
          type="file"
          name="myImage"
          onChange={handleFileChange}
          style={{
            height: 100,
            width: 200,
          }}
        />
        <Input
          variant="outline"
          size="md"
          isDisabled={false}
          isInvalid={false}
          isReadOnly={false}

        >
          <InputField value={name} onChange={(e: any) => {
            setName(e.target.value);
          }} placeholder="Enter Name here" color="$white" />
        </Input>
        <Input
          variant="outline"
          size="md"
          isDisabled={false}
          isInvalid={false}
          isReadOnly={false}
        >
          <InputField value={githubId} onChange={(e: any) => {
            setGithubId(e.target.value);
          }} placeholder="Enter github user id here" color="$white" />
        </Input>
        <button onClick={handleUpload}>Upload</button>


      </main>
    </div>
  );
};

const Home: NextPage = () => {
  return (
    <div className={styles.parent}>
      <Meta />
      <Example />
    </div>
  );
};

export default Home;
